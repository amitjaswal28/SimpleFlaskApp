pipeline {
    agent any

    environment {
        VENV_DIR = 'venv'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Setup Python') {
            steps {
                sh '''
                    python3 -m venv ${VENV_DIR}
                    . ${VENV_DIR}/bin/activate
                    pip install --upgrade pip
                    pip install -r requirements.txt
                '''
            }
        }

        stage('Test') {
            steps {
                sh '''
                    . ${VENV_DIR}/bin/activate
                    pytest > result.log
                '''
            }
            post {
                always {
                    archiveArtifacts artifacts: 'result.log', allowEmptyArchive: true
                }
                failure {
                    echo '‚ùå Tests failed'
                }
            }
        }

        stage('Deploy') {
            when {
                expression { currentBuild.result == null || currentBuild.result == 'SUCCESS' }
            }
            steps {
                echo 'üöÄ Deploying Flask App to Staging (simulated)'
                // Replace with real deployment commands if needed
            }
        }
    }

    post {
        success {
            emailext (
                to: 'amitjaswal2810@gmail.com',
                subject: "‚úÖ Build Success: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build was successful. Visit ${env.BUILD_URL} for details."
            )
        }
        failure {
            emailext (
                to: 'amitjaswal2810@gmail.com',
                subject: "‚ùå Build Failed: ${env.JOB_NAME} #${env.BUILD_NUMBER}",
                body: "The build failed. Visit ${env.BUILD_URL} for logs."
            )
        }
    }
}